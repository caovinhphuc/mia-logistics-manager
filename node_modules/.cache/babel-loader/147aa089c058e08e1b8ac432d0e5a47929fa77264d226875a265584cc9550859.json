{"ast":null,"code":"var _jsxFileName = \"/Users/phuccao/Downloads/mia-logistics-manager/mia-logistics-manager/src/hooks/useTheme.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('darkMode');\n    if (savedTheme) {\n      setIsDarkMode(JSON.parse(savedTheme));\n    }\n  }, []);\n  const toggleTheme = () => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    localStorage.setItem('darkMode', JSON.stringify(newMode));\n  };\n  const value = {\n    isDarkMode,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s2(ThemeProvider, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","JSON","parse","toggleTheme","newMode","setItem","stringify","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phuccao/Downloads/mia-logistics-manager/mia-logistics-manager/src/hooks/useTheme.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n    const context = useContext(ThemeContext);\n    if (!context) {\n        throw new Error('useTheme must be used within a ThemeProvider');\n    }\n    return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    useEffect(() => {\n        const savedTheme = localStorage.getItem('darkMode');\n        if (savedTheme) {\n            setIsDarkMode(JSON.parse(savedTheme));\n        }\n    }, []);\n\n    const toggleTheme = () => {\n        const newMode = !isDarkMode;\n        setIsDarkMode(newMode);\n        localStorage.setItem('darkMode', JSON.stringify(newMode));\n    };\n\n    const value = {\n        isDarkMode,\n        toggleTheme,\n    };\n\n    return (\n        <ThemeContext.Provider value={value}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACnE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACZ,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACnD,IAAIF,UAAU,EAAE;MACZD,aAAa,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACzC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,OAAO,GAAG,CAACR,UAAU;IAC3BC,aAAa,CAACO,OAAO,CAAC;IACtBL,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAACF,OAAO,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMG,KAAK,GAAG;IACVX,UAAU;IACVO;EACJ,CAAC;EAED,oBACIhB,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAb,QAAA,EAC/BA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACjB,GAAA,CA1BWF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}